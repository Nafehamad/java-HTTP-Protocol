/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package webclientt;

 
import java.io.BufferedOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.Reader;
import static java.lang.Double.parseDouble;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.net.URLEncoder;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
//import jdk.nashorn.internal.parser.JSONParser;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
//import org.json.simple.parser.ParseException;
import org.json.simple.*;

/**
 *
 * @author hp
 */
public class frame2 extends javax.swing.JFrame {
static String id;
String method;
String server;
static String itemid;
    /**
     * Creates new form frame2
     */
    
    public frame2(String id) {
        this.id= id;
        initComponents();
        addmethodToCombo();
        addURLsToCombo();
     //   DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
      //  model.setRowCount(0);
        this.idlabel.setText(id);
    }
     String[] strURLs = {
          "http://127.0.0.1:80/server1.php",
        "http://localhost:8084/Server/NewServlet",
       
    };
    String[] strmethod = {
        "Get",
        "Post"
        
    };
    
     void addURLsToCombo(){
        
        int i =0;
        this.servercombo.removeAllItems();
        for (i =0; i <strURLs.length; i++){
            this.servercombo.addItem(strURLs[i]);
        }
        this.servercombo.setSelectedIndex(0);
       server = (String) this.servercombo.getSelectedItem();
        //this.status.setText(str);
    }
      void addmethodToCombo(){
        
        int i =0;
        this.methodcombo.removeAllItems();
        for (i =0; i <strmethod.length; i++){
            this.methodcombo.addItem(strmethod[i]);
        }
        this.methodcombo.setSelectedIndex(0);
       method = (String) this.methodcombo.getSelectedItem();
      //  this.status.setText(str);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel9 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        idlabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        it = new javax.swing.JTextField();
        itt = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        servercombo = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        methodcombo = new javax.swing.JComboBox();
        newpass = new javax.swing.JPasswordField();
        status = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        T1 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        ite1 = new javax.swing.JTextField();
        itenum1 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        l1 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();

        jLabel9.setBackground(new java.awt.Color(0, 51, 51));
        jLabel9.setFont(new java.awt.Font("MS PGothic", 0, 36)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 51, 51));
        jLabel9.setText("Inventory System");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 153, 255));

        jLabel1.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        jLabel1.setText("New Password :");

        jButton1.setFont(new java.awt.Font("Monotype Corsiva", 0, 17)); // NOI18N
        jButton1.setText("Change Password");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        jButton2.setText("Get info ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        jLabel2.setText("ID :");

        idlabel.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        jLabel4.setText("Item ID:");

        jLabel5.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        jLabel5.setText("Num of Items:");

        it.setFont(new java.awt.Font("Monotype Corsiva", 0, 16)); // NOI18N
        it.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itActionPerformed(evt);
            }
        });

        itt.setFont(new java.awt.Font("Monotype Corsiva", 0, 16)); // NOI18N
        itt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ittActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        jButton3.setText("Update info");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        jLabel6.setText("Choose server to send :");

        servercombo.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        servercombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel7.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        jLabel7.setText("Choose request method :");

        methodcombo.setFont(new java.awt.Font("Monotype Corsiva", 0, 16)); // NOI18N
        methodcombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        newpass.setFont(new java.awt.Font("Monotype Corsiva", 0, 16)); // NOI18N

        status.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        status.setForeground(new java.awt.Color(255, 255, 255));

        jButton4.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        jButton4.setText("Log Out");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel8.setBackground(new java.awt.Color(0, 51, 51));
        jLabel8.setFont(new java.awt.Font("Monotype Corsiva", 2, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Show all product");
        jLabel8.setAlignmentY(0.0F);

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Monotype Corsiva", 0, 36)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Inventory System");

        jLabel11.setBackground(new java.awt.Color(0, 51, 51));
        jLabel11.setFont(new java.awt.Font("Monotype Corsiva", 2, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Change password");
        jLabel11.setAlignmentY(0.0F);

        jLabel12.setBackground(new java.awt.Color(0, 0, 0));
        jLabel12.setFont(new java.awt.Font("Monotype Corsiva", 2, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Insert items");
        jLabel12.setAlignmentY(0.0F);

        jButton5.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        jButton5.setText("Get product info");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Monotype Corsiva", 0, 16)); // NOI18N
        jLabel3.setText("Enter Item ID:");

        T1.setFont(new java.awt.Font("Monotype Corsiva", 0, 14)); // NOI18N
        T1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                T1ActionPerformed(evt);
            }
        });

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setFont(new java.awt.Font("Monotype Corsiva", 2, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Show a product");
        jLabel13.setAlignmentY(0.0F);

        jLabel14.setBackground(new java.awt.Color(255, 255, 255));
        jLabel14.setFont(new java.awt.Font("Monotype Corsiva", 0, 24)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Withdraw items");
        jLabel14.setAlignmentY(0.0F);

        jLabel15.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        jLabel15.setText("Item ID:");

        jLabel16.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        jLabel16.setText("Num of Items:");

        ite1.setFont(new java.awt.Font("Monotype Corsiva", 0, 16)); // NOI18N
        ite1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ite1ActionPerformed(evt);
            }
        });

        itenum1.setFont(new java.awt.Font("Monotype Corsiva", 0, 16)); // NOI18N
        itenum1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itenum1ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        jButton6.setText("Update info");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Amount", "Price ($)", "Price (£)"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Amount", "Price ($)", "Price (£)"
            }
        ));
        jScrollPane4.setViewportView(jTable2);

        l1.setFont(new java.awt.Font("Monotype Corsiva", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(52, 52, 52)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5))
                                        .addGap(24, 24, 24)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(ite1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(itenum1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(50, 50, 50)
                                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(35, 35, 35)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addComponent(jLabel2)
                                                    .addGap(84, 84, 84)
                                                    .addComponent(idlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(12, 12, 12))
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                                    .addComponent(jLabel1)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addComponent(newpass, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                .addGap(0, 176, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addContainerGap(15, Short.MAX_VALUE)
                                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(130, 130, 130)
                                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addGap(53, 53, 53)))
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(120, 120, 120)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(130, 130, 130)
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(58, 58, 58)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel15)
                                        .addGap(52, 52, 52)
                                        .addComponent(it, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel16)
                                        .addGap(18, 18, 18)
                                        .addComponent(itt))
                                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(l1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(252, 252, 252)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(3076, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(27, 27, 27)
                                        .addComponent(T1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(30, 30, 30)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(527, 527, 527)
                                        .addComponent(jButton4))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(223, 223, 223)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(38, 38, 38)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 647, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(servercombo, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(jLabel7)
                        .addGap(57, 57, 57)
                        .addComponent(methodcombo, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(551, 551, 551)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(3037, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(servercombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(methodcombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(18, 18, 18)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(idlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(26, 26, 26)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(newpass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(ite1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5)
                                .addComponent(itenum1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jButton3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel15)
                                        .addComponent(it, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel16)
                                        .addComponent(itt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(22, 22, 22)
                                    .addComponent(l1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jButton6))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(1, 1, 1)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 809, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(T1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(358, 358, 358))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton4)
                                .addGap(270, 270, 270)))))
                .addGap(142, 142, 142))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        method = (String) this.methodcombo.getSelectedItem();
        server = (String) this.servercombo.getSelectedItem();
        String itemi= this.it.getText();
        String itemnu= this.itt.getText();
        //int itemnu = Integer.parseInt(itemn);

        if (method.equals("Get")){

            try {
                String str = server+"?itemi="+itemi+"&itemnu="+itemnu+"&action=update1";
                //String str = server+"?itemi="+itemi+"&itemnu="+itemnu+"&action=update";

                URL u = new URL(str);

                int b;
                String t = "";
                String SS = "";

                URLConnection myConn = u.openConnection();
                InputStream is = myConn.getInputStream();
                while ((b = is.read()) != -1) {
                    if ((char) b == '\r') {
                        SS += "\n";
                    } else {
                        SS = SS + (char) b;
                    };

                }
                this.it.setText("");
                this.itt.setText("");

                if(SS.contains("success")){
                    this.status.setText("Your info changed successfully");
                }
                else if (SS.contains("fail")){
                    this.status.setText("Error in changing your info !");
                }

            } catch (Exception e) {
                System.out.println(e.toString());

            }
        }
        else if(method.equals("Post")){
            try {
                dataStr="0";
                //addParameter("id",id);
                addParameter("itemi",itemi);
                addParameter("itemnu",itemnu);
                addParameter("action","update1");
                String str = server;

                URL u = new URL(str);

                int b;
                String t = "";
                String SS = "";

                URLConnection myConn = u.openConnection();
                myConn.setDoOutput(true);
                myConn.setDoInput(true);

                myConn.setUseCaches(false);

                BufferedOutputStream out = new BufferedOutputStream(myConn.getOutputStream());
                out.write(dataStr.getBytes());
                out.close();
                InputStream is = myConn.getInputStream();
                while ((b = is.read()) != -1) {
                    if ((char) b == '\r') {
                        SS += "\n";
                    } else {
                        SS = SS + (char) b;
                    };

                }
                  this.it.setText("");
                this.itt.setText("");

                if(SS.contains("success")){
                    this.status.setText("Your info changed successfully");
                }
                else if (SS.contains("fail")){
                    this.status.setText("Error in changing your info !");
                }

            } catch (Exception e) {
                System.out.println(e.toString());

            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void itenum1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itenum1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itenum1ActionPerformed

    private void ite1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ite1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ite1ActionPerformed

    private void T1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_T1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_T1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        method = (String) this.methodcombo.getSelectedItem();
        server = (String) this.servercombo.getSelectedItem();
        itemid=this.T1.getText();

        if (method.equals("Get")){
            try {
                String str = server+"?itemid="+itemid+"&action=getpro";
                URL u = new URL(str);
                int b;
                String SS = "";
                URLConnection myConn = u.openConnection();
                InputStream is = myConn.getInputStream();
                while ((b = is.read()) != -1) {
                    if ((char) b == '\r') {
                        SS += "\n";
                    } else {
                        SS = SS + (char) b;
                    };
                }
                if(SS.equals("")){
                    this.l1.setText("Item does not exist!");
                }
                else{
                    String[] items = SS.split(",");
                    Double euro=fetch_API_currency();
                    Double x = parseDouble(items[2])*(1+1-euro);// ASD=EUR*eur and eur<1
                    Double priceineuro= Mathround(x);
                    Object[] row = { items[0], items[1], items[2],priceineuro};
                    DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
                    model.setRowCount(0);
                    model.addRow(row);
                }

            } catch (Exception e) {

                this.l1.setText("Item does not exist!");

            }
        }
        else if(method.equals("Post")){
            dataStr = "";
            try {
                addParameter("itemid", itemid);
                addParameter("action","getpro");

                String str = server;
                URL u = new URL(str);
                int b;
                String SS = "";

                URLConnection myConn = u.openConnection();
                myConn.setDoOutput(true);
                myConn.setDoInput(true);
                myConn.setUseCaches(false);
                BufferedOutputStream out = new BufferedOutputStream(myConn.getOutputStream());
                out.write(dataStr.getBytes());
                out.close();
                InputStream is = myConn.getInputStream();
                while ((b = is.read()) != -1) {
                    if ((char) b == '\r') {
                        SS += "\n";
                    } else {
                        SS = SS + (char) b;
                    };
                }

                String[] items = SS.split(",");
                Double euro=fetch_API_currency();
                Double x = parseDouble(items[2])*(1+1-euro);// ASD=EUR*eur and eur<1
                Double priceineuro= Mathround(x);
                Object[] row = { items[0], items[1], items[2],priceineuro};
                DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
                model.setRowCount(0);
                model.addRow(row);

            } catch (Exception e) {
                System.out.println(e.toString());
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        super.dispose();
        //new frame().setVisible(true);
        // TODO add your handling code here:
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        method = (String) this.methodcombo.getSelectedItem();
        server = (String) this.servercombo.getSelectedItem();
        String itemi= this.ite1.getText();
        String itemnu= this.itenum1.getText();
        //int itemnu = Integer.parseInt(itemn);

        if (method.equals("Get")){

            try {
                String str = server+"?itemi="+itemi+"&itemnu="+itemnu+"&action=update";
                //String str = server+"?itemi="+itemi+"&itemnu="+itemnu+"&action=update";

                URL u = new URL(str);

                int b;
                String t = "";
                String SS = "";

                URLConnection myConn = u.openConnection();
                InputStream is = myConn.getInputStream();
                while ((b = is.read()) != -1) {
                    if ((char) b == '\r') {
                        SS += "\n";
                    } else {
                        SS = SS + (char) b;
                    };

                }
                this.ite1.setText("");
                this.itenum1.setText("");

                if(SS.contains("success")){
                    this.status.setText("Your info changed successfully");
                }
                else if (SS.contains("fail")){
                    this.status.setText("Error in changing your info !");
                }

            } catch (Exception e) {
                System.out.println(e.toString());

            }
        }
        else if(method.equals("Post")){
            try {
                dataStr="0";
                //addParameter("id",id);
                addParameter("itemi",itemi);
                addParameter("itemnu",itemnu);
                addParameter("action","update");
                String str = server;

                URL u = new URL(str);

                int b;
                String t = "";
                String SS = "";

                URLConnection myConn = u.openConnection();
                myConn.setDoOutput(true);
                myConn.setDoInput(true);

                myConn.setUseCaches(false);

                BufferedOutputStream out = new BufferedOutputStream(myConn.getOutputStream());
                out.write(dataStr.getBytes());
                out.close();
                InputStream is = myConn.getInputStream();
                while ((b = is.read()) != -1) {
                    if ((char) b == '\r') {
                        SS += "\n";
                    } else {
                        SS = SS + (char) b;
                    };

                }
                    this.ite1.setText("");
                this.itenum1.setText("");
                if(SS.contains("success")){
                    this.status.setText("Your info changed successfully");
                }
                else if (SS.contains("fail")){
                    this.status.setText("Error in changing your info !");
                }

            } catch (Exception e) {
                System.out.println(e.toString());

            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void ittActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ittActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ittActionPerformed

    private void itActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        method = (String) this.methodcombo.getSelectedItem();
        server = (String) this.servercombo.getSelectedItem();

        if (method.equals("Get")){
            try {

                String str = server+"?id="+id+"&action=getinfo";
                URL u = new URL(str);
                int b;
                String SS = "";
                URLConnection myConn = u.openConnection();
                InputStream is = myConn.getInputStream();
                while ((b = is.read()) != -1) {
                    if ((char) b == '\r') {
                        SS += "\n";
                    } else {
                        SS = SS + (char) b;
                    };
                }
                String[] items = SS.split(",");
                Double euro=fetch_API_currency();

                for(int i= 0 ; i<items.length ; i+=3){
                    Double x = parseDouble(items[i+2])*(1+1-euro);
                    Double priceineuro= Mathround(x);
                    Object[] row = { items[i], items[i+1], items[i+2],priceineuro};
                    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                    model.addRow(row);
                }
            } catch (Exception e) {

                System.out.println(e.toString());

            }
        }
        else if(method.equals("Post")){
            dataStr = "";
            try {
                addParameter("id", id);
                addParameter("action","getinfo");

                String str = server;
                URL u = new URL(str);
                int b;
                String SS = "";
                URLConnection myConn = u.openConnection();
                myConn.setDoOutput(true);
                myConn.setDoInput(true);
                myConn.setUseCaches(false);
                BufferedOutputStream out = new BufferedOutputStream(myConn.getOutputStream());
                out.write(dataStr.getBytes());
                out.close();
                InputStream is = myConn.getInputStream();
                while ((b = is.read()) != -1) {
                    if ((char) b == '\r') {
                        SS += "\n";
                    } else {
                        SS = SS + (char) b;
                    };
                }
                String[] items = SS.split(",");
                Double euro=fetch_API_currency();

                for(int i= 0 ; i<items.length ; i+=3){
                    Double x = parseDouble(items[i+2])*(1+1-euro);
                    Double priceineuro= Mathround(x);
                    Object[] row = { items[i], items[i+1], items[i+2],priceineuro};
                    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                    model.addRow(row);
                }
            } catch (Exception e) {
                System.out.println(e.toString());
            }

        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

   String str ="";
        String newpass =this.newpass.getText(); 
        method = (String) this.methodcombo.getSelectedItem();
        server = (String) this.servercombo.getSelectedItem();
        if(newpass.equals("")){
       
         this.status.setText("Please enter the new password!");

        }
             else{
            
             if(server.equals("http://127.0.0.1:80/server1.php")){
                str = server+"?id="+id+"&newpass="+newpass+"&action=changepass";
             }
             else{
                str = server + "?id=" +id +"&newpass="+newpass+"&action=changepass";
             }
             if (method.equals("Get")){
             try {
        
              
             URL u = new URL(str);
             int b;
             String SS = "";

            URLConnection myConn = u.openConnection();
            InputStream is = myConn.getInputStream();
            while ((b = is.read()) != -1) {
                if ((char) b == '\r') {
                    SS += "\n";
                } else {
                    SS = SS + (char) b;
                };

            }
            if(SS.contains("success")){
                this.status.setText("Password changed successfully");
            }
            else if (SS.contains("fail")){
          this.status.setText("Error in changing password !");
            }
        
          

        } catch (Exception e) {
            System.out.println(e.toString());
           
        }

}
     
      else if(method.equals("Post")){
      dataStr = "";
        try {
        addParameter("id", id);
        addParameter("newpass", newpass);
        addParameter("action", "changepass");
       
              str = server;
         
            URL u = new URL(str);
          
            int b;
           
            String SS = "";

            URLConnection myConn = u.openConnection();
            
              myConn.setDoOutput(true);
            myConn.setDoInput(true);
           
            myConn.setUseCaches(false);
            
           
            BufferedOutputStream out = new BufferedOutputStream(myConn.getOutputStream());
            out.write(dataStr.getBytes());//"ACTION=add&NUMPTS=2&DATA=L0001\nL0002");
            out.close();
            
            InputStream is = myConn.getInputStream();
            while ((b = is.read()) != -1) {
                if ((char) b == '\r') {
                    SS += "\n";
                } else {
                    SS = SS + (char) b;
                };

            }
          System.out.printf(SS);
            if(SS.contains("success")){
                this.status.setText("Password changed successfully");
                
            }
            else if (SS.contains("fail")){
          this.status.setText("Error in changing password !");
            }
        
          

        } catch (Exception e) {
            System.out.println(e.toString());
           
        }
        
        
}}
    }//GEN-LAST:event_jButton1ActionPerformed

Double fetch_API_currency() throws org.json.simple.parser.ParseException{
                    // Setting URL
            String url_str = "https://prime.exchangerate-api.com/v5/51959d7c64f6717c1b3385eb/latest/USD";

            // Making Request
            URL url;
             HttpURLConnection request = null;
        try {
            url = new URL(url_str);
             request = (HttpURLConnection) url.openConnection();
            request.connect();
        } catch (MalformedURLException ex) {
            Logger.getLogger(frame2.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(frame2.class.getName()).log(Level.SEVERE, null, ex);
        }
            
       JSONParser parser = new JSONParser();
       Double euro=0.0;
        try (Reader reader = new InputStreamReader((InputStream)request.getContent())) {

            JSONObject jsonObject = (JSONObject) parser.parse(reader);
            System.out.println(jsonObject);
            JSONObject msg = (JSONObject) jsonObject.get("conversion_rates");
             euro= (Double) msg.get("EUR");
                
        } catch (IOException e) {
            e.printStackTrace();
        }
       // System.out.println(EUR);
        return euro;
    }
     private Double Mathround(Double euro) {
        double roundOffForEuro = Math.round(euro * 100.0) / 100.0;
        return roundOffForEuro;
    }
     String dataStr;
    public void addParameter(String ps, String vs) {
        if (ps == null || vs == null || ps.length() == 0 || vs.length() == 0) {
            return;
        }
        if (dataStr.length() > 0) {
            dataStr += "&";
        }
        try {
            dataStr += ps + "=" + URLEncoder.encode(vs, "ASCII");
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }
    
    
    
    
    
    
    
/*    
 
 private void sendgetrequest_change(String id ) {
          int b ;
         
    String    pass = newpass.getText();
        String s = "";
        if(pass.equals("")){
                          JOptionPane.showMessageDialog(this,"Please enter the new password");

        }
    try {
       
        String url = server +"?id="+id+"&pass="+pass+"&operation=changepass"  ;
        URL u = new URL(url);
         URLConnection myConn = u.openConnection();
         InputStream is = myConn.getInputStream();
         
         while ((b = is.read())!= -1){
         if((char) b == '\r' ){
         
         s+= "\n";
           }
         else {
         
         s += (char) b ; 
         
         }
         
           if(s.equals("success")){
              JOptionPane.showMessageDialog(this,"Password Changed");
            }
            else if (s.equals("fail")){
                              JOptionPane.showMessageDialog(this,"error ocure");

            }
         
         
         }

}
     catch (Exception e) {
            System.out.println(e.toString());
           
        }


            }



    
   
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frame2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frame2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frame2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frame2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frame2(id).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField T1;
    private javax.swing.JLabel idlabel;
    private javax.swing.JTextField it;
    private javax.swing.JTextField ite1;
    private javax.swing.JTextField itenum1;
    private javax.swing.JTextField itt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel l1;
    private javax.swing.JComboBox methodcombo;
    private javax.swing.JPasswordField newpass;
    private javax.swing.JComboBox servercombo;
    private javax.swing.JLabel status;
    // End of variables declaration//GEN-END:variables
}
